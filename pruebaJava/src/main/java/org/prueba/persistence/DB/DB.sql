CREATE DATABASE riwiAcademyDB;

USE riwiAcademyDB;

#SE DEBE BUSCAR POR ID O CORREO
CREATE TABLE STUDENT(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    LAST_NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) UNIQUE NOT NULL,
    STATUS ENUM ('ACTIVE','DESACTIVE') DEFAULT 'ACTIVE'
);

ALTER TABLE STUDENT
ADD REGISTRATION INT;

#SOLO SE PUEDEN BORRAR LOS QUE NO TIENE ESTUDIANTES ASOCIADOS
CREATE TABLE COURSE(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	NAME_COURSE VARCHAR(100) UNIQUE NOT NULL, #SE DEBE IGNORAR MAYUS Y MINUS
    ID_STUDENT INT,
    FOREIGN KEY (ID_STUDENT) REFERENCES STUDENT(ID)
);

#SE DEBERA ADVERTIR QUE SE ELIMINAR EL HISTORIAL DE NOTAS SI BORRA
#EN EL CURSO CORRESPONDIENTE
#UN ESTUDIANTE SOLO PUEDE TENER 3 O MENOS INSCRIPCIONES
CREATE TABLE REGISTRATION(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_STUDENT INT NOT NULL,
    ID_COURSE INT NOT NULL,
    FOREIGN KEY (ID_STUDENT) REFERENCES STUDENT(ID) ON DELETE CASCADE,
    FOREIGN KEY (ID_COURSE) REFERENCES COURSE(ID) ON DELETE CASCADE
);

#EL RANGO DE CALIFICACION SERA ENTRE 0 A 100
#LA DESCRIPCION DEBERA SER REFERENTE A LA NOTA
CREATE TABLE QUALIFICATION(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_COURSE INT NOT NULL,
    ID_REGISTRATION INT NOT NULL,
    DESCRIPTION VARCHAR(100),
    QUALITY INT NOT NULL,
    FOREIGN KEY (ID_COURSE) REFERENCES COURSE(ID) ON DELETE CASCADE,
    FOREIGN KEY (ID_REGISTRATION) REFERENCES REGISTRATION(ID) ON DELETE CASCADE
);	

SELECT STUDENT.ID,NAME,LAST_NAME,EMAIL,STATUS,NAME_COURSE FROM STUDENT INNER JOIN COURSE ON STUDENT.ID = COURSE.ID_STUDENT WHERE STUDENT.EMAIL = 'hola@hola';

SELECT STUDENT.ID,NAME,LAST_NAME,EMAIL,STATUS,NAME_COURSE FROM STUDENT INNER JOIN COURSE ON STUDENT.ID = COURSE.ID_STUDENT WHERE STUDENT.ID = 1;

SELECT * FROM COURSE;




